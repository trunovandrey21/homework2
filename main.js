// 1) 'number' + 23 + 32

// 'number' + 23
// Строка 'number' соединяеться с числом 23, результатом будет строка 'number23'
// 'number23' + 32
// Строка 'number23' соединяеться с числом 32, результатом будет строка 'number2332'
'number' + 23 + 32 // 'number2332'

// 2) 41 + 1 + 'number'

// 41 + 1
// Сначала плюсуються числа 41 и 1, выходит 42
// 42 + 'number'
// Число 42 соединяеться со строкой 'number', результатом будет строка '42number'
41 + 1 + 'number' // '42number'

// 3) null + 1

// null равен 0
// 0 + 1
// Складываются 0 и 1, выходит 1
null + 1 // 1

// 4) five' + + 'two'

// +'two'
// Унарный оператор + перед строкой 'two' пытается преобразовать строку в число, но это невозможно, поэтому результат NaN 
// 'five' + NaN
// Строка 'five' соединяеться с NaN, результатом будет строка 'fiveNaN'
'five' + + 'two' // 'fiveNaN'

// 5) 2 && 7

// возвращает последний верное число ,в этом случае это 7
2 && 7 // 7

// 6) +'40' + +'2'

// Складываются 40 и 2, результатом будет 42
+'40' + +'2' // 42

// 7) '10' - 5 === 6

// '10' - 5
//10 приравниваеться к числу и минусуеться к 5 ,выходит 5
// 5 === 6
// Сравнение 5 и 6, результатом будет false
'10' - 5 === 6 // false

// 8) true + false

// true преобразуется в 1
// false преобразуется в 0
// 1 + 0
// Складываются 1 и 0, результатом будет 1
true + false // 1

// 9) '4px' - 3

// результатом будет NaN 
'4px' - 3 // NaN

// 10) '4' - 3

// '4' приводится к числу 

// минусуеться 3 от 4 ,результатом будет 1
'4' - 3 // 1

// 11) '2' + 3 ** 2

// 3 ** 2
//  возведение в степень: 3^2 = 9
// '2' + 9
// Строка '2' соеденяеться с числом 9, результатом будет строка '29'
'2' + 3 ** 2 // '29'

// 12) 12 / '6'

// '6' приводится к числу 
// Деление 12 на 6, результатом будет 2
12 / '6' // 2

// 13) 23 + 42 + 'number'

// 23 + 42
// плюсуються числа числа 23 и 42
// 65 + 'number'
// Число 65 соединяеться  со строкой 'number'
23 + 42 + 'number' // '65number'

// 14) '10' + (5 === 6)

// 5 === 6
// Сравнение 5 и 6, результатом будет false
// '10' + false
// Строка '10' соединяеться со строкой 'false', результатом будет строка '10false'
'10' + (5 === 6) // '10false'

// 15) 'number' + 15 + 3

// 'number' + 15
// Строка 'number' соединяетьсяс числом 15
// 'number15' + 3
// Строка 'number15' соединяеться с числом 3
'number' + 15 + 3 // 'number153'



// 1) undefined + 1

// undefined приводится к NaN
undefined + 1 // NaN

// 2)'true' == true
'true' == true // false

// 3) false == 'false'

// false приводится к числу 0
// 'false' приводится к числу, что невозможно, поэтому результат NaN
// 0 == NaN
// Результатом будет false
false == 'false' // false

// 4) null == ''


// Результатом будет false, так как null равно только undefined 
null == '' // false

// 5) 3 ** (9 / 3)

// 9 / 3
// Результатом будет 3
// 3 ** 3
// Результатом будет 27
3 ** (9 / 3) // 27

// 6) !!'false' == !!'true'

// !!'false'
// Приведение строки 'false' к логическому типу, результатом будет true
// !!'true'
// Приведение строки 'true' к логическому типу, результатом будет true
// true == true
// Результатом будет true
!!'false' == !!'true' // true

// 7) 0 || '0' && 1

// 0 || '0'
// 0 равнно false, '0' приводится к true
// Результатом будет '0'
// '0' && 1
// '0' приводится к true, поэтому результатом будет последнее значение, это 1
0 || '0' && 1 // 1

// 8) 1 < 2 < 3

// 1 < 2
// Результатом будет true
// true < 3
// true приводится к 1, поэтому 1 < 3
1 < 2 < 3 // true

// 9) 'foo'+ + +'bar'

// +'bar'
// Приведение строки 'bar' к числу, что невозможно, поэтому результат NaN
// +'NaN'
// Приведение NaN к числу NaN
// 'foo' + NaN
// соединение строки 'foo' и NaN, результатом будет строка 'fooNaN'
'foo'+ + +'bar' // 'fooNaN'

// 10) 3 ** 2 / 3

// 3 ** 2
// Результатом будет 9
// 9 / 3
// Результатом будет 3
3 ** 2 / 3 // 3

// 11) 1 < 2 > 3

// 1 < 2
// Результатом будет true
// true > 3
// true приводится к 1, поэтому 1 > 3
// Результатом будет false
1 < 2 > 3 // false

// 12) (+null == false) < 1

// +null
// Приведение null к числу, результат 0
// 0 == false
// false приводится к 0, результат true
// true < 1
// true приводится к 1, результат false
(+null == false) < 1 // false

// 13) false && true || true

// false && true
// false приводится к false, результат false
// false || true
// false приводится к false, true приводится к true, результат true
false && true || true // true

// 14) false && (true || true)

// true || true
// true приводится к true, результат true
// false && true
// false приводится к false, результат false
false && (true || true) // false

// 15) (+null == false) < 1 ** 5

// +null
// Приведение null к числу, результат 0
// 0 == false
// false приводится к 0, результат true
// 1 ** 5
// Результатом будет 1
// true < 1
// true приводится к 1, результат false
(+null == false) < 1 ** 5 // false